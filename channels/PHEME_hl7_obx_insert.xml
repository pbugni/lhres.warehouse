<channel>
  <id>91066b75-e68f-49f6-9be0-9a9d6ef9bca0</id>
  <name>PHEME_hl7_obx_insert</name>
  <description>Channel listener - persists selected data from HL/7 OBX segments to warehouse hl7_obx table. 

Inbound message must include:
  - Foreign key `hl7_msh_id` in 'ZID-1.2'
  - message_control_id in 'MSH-10.1'
</description>
  <enabled>true</enabled>
  <version>2.2.1.5861</version>
  <lastModified>
    <time>1378409145576</time>
    <timezone>US/Pacific</timezone>
  </lastModified>
  <revision>24</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">Channel Reader</property>
      <property name="responseValue">None</property>
    </properties>
    <transformer>
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>Pull ids from inbound xml</name>
          <script>var hl7_msh_id = msg['ZID']['ZID.1']['ZID.1.2'].toString()
var message_control_id = msg['MSH']['MSH.10']['MSH.10.1'].toString()

channelMap.put('hl7_msh_id', hl7_msh_id)
channelMap.put('message_control_id', message_control_id)</script>
          <type>JavaScript</type>
          <data class="map">
            <entry>
              <string>Script</string>
              <string>var hl7_msh_id = msg['ZID']['ZID.1']['ZID.1.2'].toString()
var message_control_id = msg['MSH']['MSH.10']['MSH.10.1'].toString()

channelMap.put('hl7_msh_id', hl7_msh_id)
channelMap.put('message_control_id', message_control_id)</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64"/>
      <outboundTemplate encoding="base64"/>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>HL7V2</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">false</property>
      </inboundProperties>
      <outboundProperties>
        <property name="convertLFtoCR">true</property>
        <property name="handleRepetitions">false</property>
        <property name="handleSubcomponents">false</property>
        <property name="stripNamespaces">true</property>
        <property name="useStrictParser">false</property>
        <property name="useStrictValidation">false</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.2.1.5861</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>HL7_OBX_NO_OBR</name>
      <properties>
        <property name="DataType">Database Writer</property>
        <property name="URL">jdbc:postgresql://localhost:5432/warehouse</property>
        <property name="driver">org.postgresql.Driver</property>
        <property name="host">query</property>
        <property name="password">password</property>
        <property name="query"/>
        <property name="script">// This writes out a row for every OBX stmt picked up in the transformer
// NB - OBX data is also written out from the HL7_OBR_OBX channel, from 
// ORU_R01 statements, where an OBR always proceeds the OBX rows.
// The known set of OBX statements without an OBR is limited to
// ('29553-5':'Calculated Patient Age', '43137-9':'Clinical Finding Present') 
// Not all values captured in HL7_OBR_OBX are captured here.

var stmt = new java.lang.StringBuilder()
stmt.append("BEGIN; \n")

// This writes out a row for every OBX stmt picked up in the transformer
for (var i=0; i&lt; $('obxArray').length(); i++) {

  var obx = $('obxArray')[i]

  var value_type = quoteOrNull(obx['OBX.2']['OBX.2.1'].toString())
  var observation_id = quoteOrNull(obx['OBX.3']['OBX.3.1'].toString())
  var observation_text = quoteOrNull(obx['OBX.3']['OBX.3.2'].toString())
  var observation_result = quoteOrNull(obx['OBX.5'].toString())
  var units;
  if (obx['OBX.6']['OBX.6.5'].toString().length &gt; 0) {
    units = quoteOrNull(obx['OBX.6']['OBX.6.5'].toString())
  } else {
    units = quoteOrNull(obx['OBX.6']['OBX.6.2'].toString())
  }
  var result_status = quoteOrNull(obx['OBX.11']['OBX.11.2'].toString())
  var observation_datetime = quoteOrNull(datetimeForSQL(obx['OBX.14']['OBX.14.1'].toString())) 
  var performing_lab_code = quoteOrNull(obx['OBX.15']['OBX.15.4'].toString())

  stmt.append("INSERT INTO hl7_obx (hl7_msh_id, value_type, observation_id, observation_text, ")&#13;  stmt.append("observation_result, units, result_status, observation_datetime, performing_lab_code)")&#13;  stmt.append("VALUES ("+ parseInt(channelMap.get("hl7_msh_id")) +","+ value_type +",")&#13;  stmt.append(observation_id +","+ observation_text +",")&#13;  stmt.append(observation_result +","+ units +","+ result_status +",")&#13;  stmt.append(observation_datetime +","+ performing_lab_code +");\n")&#13;
}

var dbConn = DatabaseConnectionFactory.createDatabaseConnection('org.logicalcobwebs.proxool.ProxoolDriver',
    'proxool.example:org.postgresql.Driver:jdbc:postgresql://localhost:5432/warehouse','user','password');

try {
  stmt.append("COMMIT;\n")
  dbConn.executeUpdate(stmt)
} catch (e) {
  logger.error("Exception caught on hl7_obx insert")
  logger.error("Failed stmt: " + stmt)
  logger.error("message_control_id: " + $('message_control_id'))
  logger.error(e)
  logger.error("Executing ROLLBACK...")
  dbConn.executeUpdate("ROLLBACK;")
} finally {
  dbConn.close();
}</property>
        <property name="useScript">1</property>
        <property name="username">user</property>
      </properties>
      <transformer>
        <steps>
          <step>
            <sequenceNumber>0</sequenceNumber>
            <name>obxArray</name>
            <script>var obxArray = new XMLList(msg..OBX)
channelMap.put("obxArray", obxArray)</script>
            <type>JavaScript</type>
            <data class="map">
              <entry>
                <string>Script</string>
                <string>var obxArray = new XMLList(msg..OBX)
channelMap.put("obxArray", obxArray)</string>
              </entry>
            </data>
          </step>
        </steps>
        <inboundTemplate encoding="base64"/>
        <outboundTemplate encoding="base64"/>
        <inboundProtocol>HL7V2</inboundProtocol>
        <outboundProtocol>XML</outboundProtocol>
        <inboundProperties>
          <property name="convertLFtoCR">true</property>
          <property name="handleRepetitions">false</property>
          <property name="handleSubcomponents">false</property>
          <property name="stripNamespaces">true</property>
          <property name="useStrictParser">false</property>
          <property name="useStrictValidation">false</property>
        </inboundProperties>
        <outboundProperties>
          <property name="stripNamespaces">true</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>Database Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">3</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>